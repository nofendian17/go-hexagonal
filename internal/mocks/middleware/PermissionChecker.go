// Code generated by mockery v2.26.1. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"

	mock "github.com/stretchr/testify/mock"
)

// PermissionChecker is an autogenerated mock type for the PermissionChecker type
type PermissionChecker struct {
	mock.Mock
}

// Check provides a mock function with given fields: c, requiredPermission
func (_m *PermissionChecker) Check(c echo.Context, requiredPermission string) (bool, error) {
	ret := _m.Called(c, requiredPermission)

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) (bool, error)); ok {
		return rf(c, requiredPermission)
	}
	if rf, ok := ret.Get(0).(func(echo.Context, string) bool); ok {
		r0 = rf(c, requiredPermission)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(echo.Context, string) error); ok {
		r1 = rf(c, requiredPermission)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPermissionChecker interface {
	mock.TestingT
	Cleanup(func())
}

// NewPermissionChecker creates a new instance of PermissionChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPermissionChecker(t mockConstructorTestingTNewPermissionChecker) *PermissionChecker {
	mock := &PermissionChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
